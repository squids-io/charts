apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{.Release.Namespace}}
  labels:
    app.kubernetes.io/name: grafana
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      annotations:
        grafana-version: '1.0'
      name: grafana
      labels:
        app.kubernetes.io/name: grafana
    spec:
      initContainers:
        - name: dts-monitor-conf
          image: {{.Values.conf.image.registry}}/{{.Values.conf.image.repository}}/{{.Values.conf.image.name}}:{{ .Values.conf.image.tag }}
          command:
             - sh
             - -c
             - cp -r /grafana/dashboards/* /dashboards
          volumeMounts:
            - name: grafana-dashboards
              mountPath: /dashboards
      containers:
        - name: grafana
          image: {{ .Values.grafana.image.registry }}/{{.Values.grafana.image.repository}}/{{ .Values.grafana.image.name }}:{{ .Values.grafana.image.tag }}
          imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
          securityContext:
            runAsUser: 0
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.grafana.adminPassword }}
          ports:
            - name: grafana
              containerPort: 3000
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: grafana-provisioning
              mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              subPath: datasources.yaml
            - name: grafana-provisioning
              mountPath: /etc/grafana/provisioning/dashboards/dashboards.yaml
              subPath: dashboards.yaml
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards/
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            {{ if .Values.grafana.enableHttps }}
            - name: grafana-secret
              mountPath: /grafana/ssl/
            {{- end }}
            - name: localtime
              mountPath: /etc/localtime
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: grafana-dashboards
          emptyDir: { }
        - name: grafana-provisioning
          configMap:
            name: grafana-provisioning
        - name: grafana-config
          configMap:
            name: grafana-config
        {{ if .Values.grafana.enableHttps }}
        - name: grafana-secret
          secret:
            secretName: grafana-secret
        {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}