apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: {{.Release.Namespace}}
data:
  nginx.conf: |

    load_module modules/ngx_http_geoip_module.so;
    load_module modules/ngx_stream_geoip_module.so;
    worker_processes  1;

    events {
      worker_connections  1024;
    }

    http {

      map $http_upgrade $connection_upgrade {
        default Upgrade;
        ''      close;
      }

      geoip_country         /etc/nginx/geoip/GeoIP.dat;
      geoip_city            /etc/nginx/geoip/GeoLiteCity.dat;
      include       mime.types;
      default_type  application/octet-stream;
      underscores_in_headers on;

      #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
      #                  '$status $body_bytes_sent "$http_referer" '
      #                  '"$http_user_agent" "$http_x_forwarded_for"';

      log_format json_analytics escape=json '{'
                      '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
                      '"connection": "$connection", ' # connection serial number
                      '"connection_requests": "$connection_requests", ' # number of requests made in connection
                      '"pid": "$pid", ' # process pid
                      '"request_id": "$request_id", ' # the unique request id
                      '"request_length": "$request_length", ' # request length (including headers and body)
                      '"remote_addr": "$remote_addr", ' # client IP
                      '"remote_user": "$remote_user", ' # client HTTP username
                      '"remote_port": "$remote_port", ' # client port
                      '"time_local": "$time_local", '
                      '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
                      '"request": "$request", ' # full path no arguments if the request
                      '"request_uri": "$request_uri", ' # full path and arguments if the request
                      '"args": "$args", ' # args
                      '"status": "$status", ' # response status code
                      '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
                      '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
                      '"http_referer": "$http_referer", ' # HTTP referer
                      '"http_user_agent": "$http_user_agent", ' # user agent
                      '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
                      '"http_host": "$http_host", ' # the request Host: header
                      '"server_name": "$server_name", ' # the name of the vhost serving the request
                      '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
                      '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
                      '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
                      '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
                      '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
                      '"upstream_response_length": "$upstream_response_length", ' # upstream response length
                      '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
                      '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
                      '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
                      '"scheme": "$scheme", ' # http or https
                      '"request_method": "$request_method", ' # request method
                      '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
                      '"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise
                      '"gzip_ratio": "$gzip_ratio", '
                      '"http_cf_ray": "$http_cf_ray", '
                      '"geoip_country_code": "$geoip_country_code", '
                      '"latitude": "$geoip_latitude", '
                      '"longitude": "$geoip_longitude"'
                      '}';

      access_log  /var/log/nginx/access.log  json_analytics;

      sendfile        on;
      #tcp_nopush     on;

      keepalive_timeout  65;

      #gzip  on;

{{ if .Values.enableWeb }}
      server {
        {{ if eq .Values.env "pro" }}
        listen       443 ssl;
        server_name  {{ .Values.web.domain }} {{ .Values.web.subDomain }};

        ssl_certificate  /etc/nginx/cert/squids.crt;
        ssl_certificate_key /etc/nginx/cert/squids.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        set $allow_origin "";
        if ( $http_origin ~ '^https?://(blog.|console.|){{ .Values.web.domain }}' ) {
                set $allow_origin $http_origin;
        }
        {{ end }}

        {{ if eq .Values.env "private" }}
        listen       80;
        server_name  {{.Values.web.ip}};

        set $allow_origin "";
        if ( $http_origin ~ '^http?://{{.Values.web.ip}}:(80|8080)' ) {
                set $allow_origin $http_origin;
        }
       {{ end }}

        location / {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://squids-web:3000;
        }

        location ~* ^/api/v1/(operators|projects|clusters|backups|vendors|k8s_masters|logs|migrate_tasks|cloud_resources|alerts|notification|config_templates|data_flashback_tasks|pool) {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://squids-hub:29527;
        }

        location ~* ^/api/v1/(organizations|permissions|resources|roles|userDataPermissions|users|sso|oauth2|login|redeems|rewards|user_licenses) {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://squids-user:29529;
        }

        location ~* ^/api/v1/(activitys|accounts|tradeBills|chargingRules|tradeOrders|receiveAddresss|rechargeBills|rechargeOrders|regions) {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://squids-trade:29528;
        }
  
        location ~* ^/api/v1/(operation_logs) {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://{{.Values.operationLog.host}}:29533;
        }
        {{ if .Values.enableLauncher }}
        location ~* ^/api/v1/(apps|virtual_machines|launcher_vendors) {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://{{.Values.launcher.host}}:29530;
        }
        {{ end }}
        {{ if .Values.enableLicenseServer }}
        location ~* ^/api/v1/(licenses|clients) {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://{{.Values.license.host}}:29532;
        }
        {{ end }}
        location ~* ^/api/motion/(init|version|(v2/(migrate_tasks|license))) {
          auth_basic off;
          add_header Access-Control-Allow-Origin '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass {{.Values.dbmotion.url}};
        }
        {{ if .Values.dbs.enable }}
        location ~* (^/api/v1/(vendor|credentials|backup_data_sources|backup_data_source_agents|backup_plans|backup_sets|backup_agents|backup_proxies|restore_tasks|sandboxes)|(^/client_files)){
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass {{.Values.dbs.url}};
        }
        {{ end }}
        location ~* ^/(bbm|bomber|workspace|upload|bomberws) {
          auth_basic off;
          add_header Access-Control-Allow-Origin '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
          proxy_pass {{ .Values.dms.url }};
        }
      }
      {{ end }}

      server {
        {{ if eq .Values.env "pro" }}
        listen       443 ssl;
        server_name  {{ .Values.console.domain }};

        ssl_certificate  /etc/nginx/cert/squids.crt;
        ssl_certificate_key /etc/nginx/cert/squids.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        set $allow_origin "";
        if ( $http_origin ~ '^https?://(blog.|console.|){{ .Values.web.domain }}' ) {
                set $allow_origin $http_origin;
        }
        {{ end }}

        {{ if eq .Values.env "private" }}
        {{ if .Values.enableWeb }}
        listen       8080;
        {{ else }}
        listen       80;
        {{ end }}
        server_name  {{.Values.console.ip}};

        set $allow_origin "";
        if ( $http_origin ~ '^http?://{{.Values.console.ip}}:(80|8080)' ) {
            set $allow_origin $http_origin;
        }
        {{ end }}

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
          root   /usr/share/nginx/html;
          index  index.html;
          try_files $uri /index.html;

          gzip on;
          gzip_static on;
          gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
          gzip_proxied off;
          gzip_vary on;
          gzip_comp_level 6;
          gzip_buffers 16 8k;
          gzip_http_version 1.1;

          access_log off;
        }

        location ~* ^/api/v1/(operators|projects|clusters|backups|vendors|k8s_masters|logs|migrate_tasks|cloud_resources|alerts|notification|config_templates|data_flashback_tasks|pool) {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://squids-hub:29527;
        }

        location ~* ^/api/v1/(organizations|permissions|resources|roles|userDataPermissions|users|sso|oauth2|login|redeems|rewards|user_licenses) {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://squids-user:29529;
        }

        location ~* ^/api/v1/(activitys|accounts|tradeBills|chargingRules|tradeOrders|receiveAddresss|rechargeBills|rechargeOrders|regions) {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://squids-trade:29528;
        }
  
        location ~* ^/api/v1/(operation_logs) {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://{{.Values.operationLog.host}}:29533;
        }

        location ~* ^/api/motion/(init|version|(v2/(migrate_tasks|license|alert|vendor_res|client_files|config_template|check_tasks))){
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass {{.Values.dbmotion.url}};
        }
        {{ if .Values.dbs.enable }}
        location ~* (^/api/v1/(vendor|credentials|backup_data_sources|backup_data_source_agents|backup_plans|backup_sets|backup_agents|backup_proxies|restore_tasks|sandboxes)|(^/client_files)){
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass {{.Values.dbs.url}};
        }
        {{ end }}
        location ~* ^/api/v1/(ws|wss) {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
          proxy_pass http://squids-hub:29527;
        }

        {{ if .Values.enableLauncher }}
        location ~* ^/api/v1/(apps|virtual_machines|launcher_vendors) {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://{{.Values.launcher.host}}:29530;
        }
        {{ end }}

        {{ if .Values.enableLicenseServer }}
        location ~* ^/api/v1/(licenses|clients) {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass http://{{.Values.license.host}}:29532;
        }
        {{ end }}

        location ~* ^/(bbm|bomber|workspace|upload|bomberws){
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
          proxy_pass {{ .Values.dms.url }};
        }

      }

    {{ if eq .Values.env "pro" }}
      server {
        listen       80;
        server_name  {{ .Values.web.domain }} {{ .Values.web.subDomain }};
        rewrite ^/(.*)$ https://{{ .Values.web.domain }}$1 permanent;
      }

      server {
        listen       80;
        server_name  {{ .Values.console.domain }} ;
        rewrite ^/(.*)$ https://{{ .Values.console.domain }}$1 permanent;
      }
    {{ end }}
    {{ if ne .Values.env "pro" }}
      server {
        listen 8081;

        location ~* ^/api/v1/(backups) {
          auth_basic off;
          add_header Access-Control-Allow-Origin  '$allow_origin';
          add_header Access-Control-Allow-Credentials 'true';
          add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
          add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
          proxy_set_header Host $http_host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
          proxy_pass http://squids-backup:29531;
        }
      }
    {{ end }}
    }
