
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: redishas.redis.squids.io
spec:
  group: redis.squids.io
  names:
    kind: RedisHA
    listKind: RedisHAList
    plural: redishas
    singular: redisha
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: RedisHA is the Schema for the redishas API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: RedisHASpec defines the desired state of RedisHA
          properties:
            backupImage:
              description: BackupImage for redis cluster exec backup action
              type: string
            clusterSpec:
              description: 'ClusterSpec describes cluster-related attributes, Such
                as: cluster database version, cluster operation mode'
              properties:
                characterSet:
                  description: Database Character set
                  type: string
                image:
                  description: Image describes database image
                  type: string
                matchLabels:
                  additionalProperties:
                    type: string
                  description: Map of string keys and values that can be used to organize
                    and categorize for database instance
                  type: object
                mode:
                  description: Mode describes database running mode(HACluster、Singleton)
                  type: string
                nodeAffinityStrategies:
                  description: NodeAffinityStrategy is nodeAffinity rules, it allows
                    you to constrain which nodes your pod is eligible to be scheduled
                    on, based on labels on the node.
                  items:
                    description: A node selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: The label key that the selector applies to.
                        type: string
                      operator:
                        description: Represents a key's relationship to a set of values.
                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt,
                          and Lt.
                        type: string
                      values:
                        description: An array of string values. If the operator is
                          In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. If the operator is Gt or Lt, the values array
                          must have a single element, which will be interpreted as
                          an integer. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                timezone:
                  description: 'Database timezone, like: +08:00'
                  type: string
                version:
                  description: 'Version describes database version(like mysql: 5.6、5.7、8.0)'
                  type: string
              required:
              - mode
              - version
              type: object
            databaseResource:
              description: DatabaseResource describes the cluster database compute
                resource requirements
              properties:
                resources:
                  description: Resources describes the compute resource requirements(include
                    cpu、memory)
                  properties:
                    limits:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                storage:
                  description: Storage describes database persistent volume related
                    attributes
                  properties:
                    iops:
                      description: Iops describes database persistent volume max iops
                      format: int64
                      type: integer
                    size:
                      description: Size describes database persistent volume storage
                      format: int64
                      type: integer
                    storageClass:
                      description: StorageClass describes database volume storageClass
                        definition If not specified, use default StorageClass
                      type: string
                  required:
                  - size
                  type: object
              type: object
            exporterImage:
              description: ExporterImage for redis monitor
              type: string
            leaderImage:
              description: LeaderImage for redis election
              type: string
            password:
              description: Password redis auth set requirepass and masterauth
              type: string
            redises:
              additionalProperties:
                properties:
                  customConfig:
                    additionalProperties:
                      type: string
                    description: CustomConfig describes the instance's custom config
                    type: object
                  databaseResource:
                    description: DatabaseResource describes the cluster database compute
                      resource requirements
                    properties:
                      resources:
                        description: Resources describes the compute resource requirements(include
                          cpu、memory)
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                        type: object
                      storage:
                        description: Storage describes database persistent volume
                          related attributes
                        properties:
                          iops:
                            description: Iops describes database persistent volume
                              max iops
                            format: int64
                            type: integer
                          size:
                            description: Size describes database persistent volume
                              storage
                            format: int64
                            type: integer
                          storageClass:
                            description: StorageClass describes database volume storageClass
                              definition If not specified, use default StorageClass
                            type: string
                        required:
                        - size
                        type: object
                    type: object
                type: object
              description: Redises defines
              type: object
            replicas:
              description: Replicas defines how many slaves you want to create, at
                least 1
              format: int32
              type: integer
            restoreImage:
              description: RestoreImage for redis cluster if restore from a backup
                set
              type: string
            restoreSource:
              description: RestoreSource describes recover data from a data source
                when creating a cluster ignore this parameter when you don't have
                a restory source
              properties:
                masterSource:
                  type: boolean
                remoteBackupSource:
                  properties:
                    awsAccessKeyID:
                      description: fields for backup in IndependentStorage-awsS3
                      type: string
                    awsEndpoint:
                      type: string
                    awsS3Url:
                      type: string
                    awsSecretAccessKey:
                      type: string
                    backupName:
                      type: string
                    backupSetUuid:
                      description: fields for backup, the backup created by squids
                      type: string
                    kind:
                      type: string
                    namespace:
                      type: string
                    pointInTime:
                      type: string
                    storageInterfaceType:
                      description: field for backup in IndependentStorage
                      type: string
                  type: object
              type: object
          required:
          - replicas
          type: object
        status:
          properties:
            conditions:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "make" to regenerate code after modifying
                this file'
              items:
                description: Condition saves the state information of the redis cluster
                properties:
                  lastTransitionTime:
                    description: LastUpdateAt   time.Time `json:"-"` Last time the
                      condition transitioned from one status to another.
                    type: string
                  lastUpdateTime:
                    description: The last time this condition was updated.
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Status of cluster condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            customStatus:
              description: ConditionType defines the condition that the RF can have
              type: string
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
