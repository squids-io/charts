apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: thanos-compact
  name: thanos-compact
  namespace: {{.Release.Namespace}}
spec:
  ports:
    - name: http
      port: 10902
      targetPort: http
  selector:
    app.kubernetes.io/name: thanos-compact
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: thanos-compact
  name: thanos-compact
  namespace: {{.Release.Namespace}}
spec:
  # only can be set 1
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos-compact
  serviceName: thanos-compact
  template:
    metadata:
      labels:
        app.kubernetes.io/name: thanos-compact
    spec:
      containers:
        - args:
            - compact
            - --wait
            - --objstore.config-file=/etc/thanos/objectstorage.yaml
            - --data-dir=/var/thanos/compact
            - --debug.accept-malformed-index
            - --log.level=debug
            - --retention.resolution-raw={{ .Values.thanosCompact.retention.resolutionRaw }}
            - --retention.resolution-5m={{ .Values.thanosCompact.retention.resolution5m }}
            - --retention.resolution-1h={{ .Values.thanosCompact.retention.resolution1h }}
          image: quay.io/thanos/thanos:{{ .Values.image.thanosTag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            failureThreshold: 4
            httpGet:
              path: /-/healthy
              port: 10902
              scheme: HTTP
            periodSeconds: 30
          name: thanos-compact
          ports:
            - containerPort: 10902
              name: http
          readinessProbe:
            failureThreshold: 20
            httpGet:
              path: /-/ready
              port: 10902
              scheme: HTTP
            periodSeconds: 5
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/thanos/compact
              name: data
              readOnly: false
            - name: thanos-objectstorage
              subPath: objectstorage.yaml
              mountPath: /etc/thanos/objectstorage.yaml
          {{- with .Values.thanosCompact.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      terminationGracePeriodSeconds: 120
      volumes:
        - name: thanos-objectstorage
          secret:
            secretName: thanos-objectstorage
      {{- with .Values.thanosCompact.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        labels:
          app.kubernetes.io/name: thanos-compact
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.thanosCompact.pvcSize }}

