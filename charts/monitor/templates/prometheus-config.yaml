apiVersion: v1
kind: ConfigMap
metadata:
    name: prometheus-config-tmpl
    namespace: {{.Release.Namespace}}
data:
    prometheus.yaml.tmpl: |-
        global:
          scrape_interval: 5s
          evaluation_interval: 5s
          external_labels:
            cluster: prometheus-ha
            prometheus_replica: $(POD_NAME)
        rule_files:
        - /etc/prometheus/rules/*rules.yaml
        scrape_configs:
        - job_name: cadvisor
          metrics_path: /metrics/cadvisor
          scrape_interval: 10s
          scrape_timeout: 10s
          scheme: https
          tls_config:
            insecure_skip_verify: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs:
          - role: node
          relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - source_labels: [__meta_kubernetes_node_address_ExternalIP]
            action: replace
            target_label: __address__
            replacement: $1:10250
        - job_name: 'node'
          kubernetes_sd_configs:
          - role: node
          relabel_configs:
          - source_labels: [__meta_kubernetes_node_address_ExternalIP]
            action: replace
            target_label: __address__
            replacement: $1:9100
          - source_labels: [__meta_kubernetes_node_name]
            action: replace
            target_label: node_name
          - source_labels: []
            action: replace
            target_label: name
            replacement: node_exporter
        - job_name: mysqld-exporter
          scrape_interval: 15s
          scrape_timeout: 10s
          metrics_path: /metrics
          scheme: http
          kubernetes_sd_configs:
          - role: pod
          relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_db_type, __meta_kubernetes_pod_label_type]
            separator: ;
            regex: mysql;database
            replacement: $1
            action: keep
          - source_labels: [__address__]
            separator: ;
            regex: (.*)
            target_label: __address__
            replacement: mysqld-exporter:9104
            action: replace
          - source_labels: [__meta_kubernetes_pod_name]
            separator: ;
            regex: (.*)
            target_label: instance
            replacement: $1
            action: replace
          - source_labels: [__meta_kubernetes_namespace]
            separator: ;
            regex: (.*)
            target_label: namespace
            replacement: $1
            action: replace
          - separator: ;
            regex: __meta_kubernetes_pod_label_((app_name)|(db_role)|(db_type)|(type))
            replacement: $1
            action: labelmap
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app_name]
            separator: /
            regex: (.*)
            target_label: __param_secret
            replacement: ${1}-root-suffix
            action: replace
          - source_labels: [__meta_kubernetes_pod_ip]
            separator: ;
            regex: (.*)
            target_label: __param_ip
            replacement: ${1}
            action: replace
          - source_labels: [db_type]
            separator: ;
            regex: (mysql)
            target_label: alertingTargetType
            replacement: MySQLCluster
            action: replace
          - source_labels: [app_name]
            separator: ;
            regex: (.*)
            target_label: alertingTargetName
            replacement: $1
            action: replace
        - job_name: 'backup-exporter'
          scrape_interval: 1m
          scrape_timeout: 50s
          kubernetes_sd_configs:
          - role: pod
          relabel_configs:
          - source_labels: [__address__]
            separator: ;
            regex: (.*)
            target_label: __address__
            replacement: backup-exporter:9100
            action: replace
        - job_name: 'volume-exporter'
          scrape_interval: 1m
          scrape_timeout: 50s
          kubernetes_sd_configs:
          - role: pod
          relabel_configs:
          - source_labels: [__meta_kubernetes_pod_ip]
            action: replace
            target_label: __address__
            replacement: $1:9100
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
            regex: volume-exporter
            action: keep
          metric_relabel_configs:
          - source_labels: [pod_name]
            target_label: instance
        - job_name: etcd-exporter
          scrape_interval: 20s
          scrape_timeout: 5s
          metrics_path: /metrics
          scheme: https
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_label_component]
              separator: ;
              regex: etcd
              replacement: $1
              action: keep
            - source_labels: [__meta_kubernetes_pod_host_ip]
              separator: ;
              regex: (.*)
              target_label: __address__
              replacement: $1:2379
              action: replace
          tls_config:
            ca_file: /etc/kubernetes/pki/etcd/ca.crt
            cert_file: /etc/kubernetes/pki/etcd/server.crt
            key_file: /etc/kubernetes/pki/etcd/server.key
---

apiVersion: v1
kind: ConfigMap
metadata:
    name: prometheus-rules
    labels:
        name: prometheus-rules
    namespace: {{.Release.Namespace}}
data:
    alert-rules.yaml: |-
        groups:
        - name: k8s.rules
          rules:
          - expr: |
              sum(rate(container_cpu_usage_seconds_total{job="cadvisor", image!="", container!=""}[5m])) by (namespace)
            record: namespace:container_cpu_usage_seconds_total:sum_rate
          - expr: |
              sum(container_memory_usage_bytes{job="cadvisor", image!="", container!=""}) by (namespace)
            record: namespace:container_memory_usage_bytes:sum
          - expr: |
              sum by (namespace, pod, container) (
                rate(container_cpu_usage_seconds_total{job="cadvisor", image!="", container!=""}[5m])
              )
            record: namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
