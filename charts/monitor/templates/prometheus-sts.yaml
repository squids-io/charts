kind: Service
apiVersion: v1
metadata:
  name: prometheus-headless
  namespace: {{.Release.Namespace}}
  labels:
    app.kubernetes.io/name: prometheus
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: prometheus
  ports:
    - name: web
      protocol: TCP
      port: 9090
      targetPort: web
    - name: grpc
      port: 10901
      targetPort: grpc
---
#kind: Service
#apiVersion: v1
#metadata:
#  name: prometheus
#  namespace: {{.Release.Namespace}}
#  labels:
#    app.kubernetes.io/name: prometheus
#spec:
#  type: NodePort
#  selector:
#    app.kubernetes.io/name: prometheus
#  ports:
#    - name: web
#      protocol: TCP
#      port: 9090
#      targetPort: web
#      nodePort: 30002
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: {{.Release.Namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
  namespace: {{.Release.Namespace}}
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: {{.Release.Namespace}}
roleRef:
  kind: ClusterRole
  name: prometheus
  apiGroup: rbac.authorization.k8s.io
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: {{.Release.Namespace}}
  labels:
    app.kubernetes.io/name: prometheus
spec:
  serviceName: prometheus-headless
  podManagementPolicy: Parallel
  replicas: {{ .Values.prometheusSts.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus
    spec:
      serviceAccountName: prometheus
      securityContext:
        fsGroup: 0
        runAsUser: 0
      containers:
        - name: prometheus
          image: quay.io/prometheus/prometheus:{{ .Values.image.prometheusTag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --config.file=/etc/prometheus/config_out/prometheus.yaml
            - --storage.tsdb.path=/prometheus
            - --storage.tsdb.retention.time={{ .Values.prometheusSts.prometheus.storage.retentionTime }}
            - --web.route-prefix=/
            - --web.enable-lifecycle
            - --storage.tsdb.no-lockfile
            - --storage.tsdb.min-block-duration={{ .Values.prometheusSts.prometheus.storage.minBlockDuration }}
            - --storage.tsdb.max-block-duration={{ .Values.prometheusSts.prometheus.storage.maxBlockDuration }}
            - --log.level=debug
          ports:
            - containerPort: 9090
              name: web
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /-/healthy
              port: web
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 120
            httpGet:
              path: /-/ready
              port: web
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          volumeMounts:
            - mountPath: /etc/kubernetes/pki
              name: k8skeys
            - mountPath: /etc/prometheus/config_out
              name: prometheus-config-out
              readOnly: true
            - mountPath: /prometheus
              name: prometheus-storage
            - mountPath: /etc/prometheus/rules
              name: prometheus-rules
          {{- with .Values.prometheusSts.prometheus.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: thanos
          image: quay.io/thanos/thanos:{{ .Values.image.thanosTag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - sidecar
            - --log.level=debug
            - --tsdb.path=/prometheus
            - --prometheus.url=http://127.0.0.1:9090
            - --objstore.config-file=/etc/thanos/objectstorage.yaml
            - --reloader.config-file=/etc/prometheus/config/prometheus.yaml.tmpl
            - --reloader.config-envsubst-file=/etc/prometheus/config_out/prometheus.yaml
            - --reloader.rule-dir=/etc/prometheus/rules/
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: http-sidecar
              containerPort: 10902
            - name: grpc
              containerPort: 10901
          livenessProbe:
            httpGet:
              port: 10902
              path: /-/healthy
          readinessProbe:
            httpGet:
              port: 10902
              path: /-/ready
          volumeMounts:
            - name: k8skeys
              mountPath: /etc/kubernetes/pki
            - name: prometheus-config-tmpl
              mountPath: /etc/prometheus/config
            - name: prometheus-config-out
              mountPath: /etc/prometheus/config_out
            - name: prometheus-rules
              mountPath: /etc/prometheus/rules
            - name: prometheus-storage
              mountPath: /prometheus
            - name: thanos-objectstorage
              subPath: objectstorage.yaml
              mountPath: /etc/thanos/objectstorage.yaml
          {{- with .Values.prometheusSts.thanos.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: k8skeys
          hostPath:
            path: {{.Values.prometheusSts.kubePKIPath}}
        - name: prometheus-config-tmpl
          configMap:
            defaultMode: 420
            name: prometheus-config-tmpl
        - name: prometheus-config-out
          emptyDir: {}
        - name: prometheus-rules
          configMap:
            name: prometheus-rules
        - name: thanos-objectstorage
          secret:
            secretName: thanos-objectstorage
      {{- with .Values.prometheusSts.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.prometheusSts.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.prometheusSts.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: prometheus-storage
        labels:
          app.kubernetes.io/name: prometheus
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.prometheusSts.pvcSize }}
        volumeMode: Filesystem
