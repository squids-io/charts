
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: backups.backup.squids.io
spec:
  group: backup.squids.io
  names:
    kind: Backup
    listKind: BackupList
    plural: backups
    singular: backup
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Backup is the Schema for the backups API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BackupSpec defines the desired state of Backup
              properties:
                backoffLimit:
                  description: Specifies the number of retries before marking this backup
                    job failed. Defaults to 0
                  format: int32
                  type: integer
                backupInstanceFingerprint:
                  description: Used to identify database instance.
                  type: string
                backupQuotaSize:
                  description: backup quota size
                  format: int64
                  type: integer
                backupStorageInterface:
                  description: Storage interface to manage backup set.
                  properties:
                    jfs:
                      description: JFS storage interface
                      properties:
                        awsAccessKey:
                          type: string
                        awsSecretKey:
                          type: string
                        bucket:
                          type: string
                      required:
                        - awsAccessKey
                        - awsSecretKey
                        - bucket
                      type: object
                    nas:
                      description: NAS storage interface
                      properties:
                        address:
                          type: string
                        backupPath:
                          type: string
                        name:
                          type: string
                        password:
                          type: string
                        port:
                          type: integer
                        protocol:
                          type: string
                        username:
                          type: string
                      required:
                        - address
                        - backupPath
                        - name
                        - port
                        - protocol
                      type: object
                    s3:
                      description: AWS s3 storage interface
                      properties:
                        awsAccessKeyId:
                          type: string
                        awsEndpoint:
                          type: string
                        awsSecretAccessKey:
                          type: string
                      required:
                        - awsAccessKeyId
                        - awsEndpoint
                        - awsSecretAccessKey
                      type: object
                  type: object
                clusterName:
                  description: Name of database cluster
                  type: string
                dbType:
                  description: Type of database
                  type: string
                extraLabels:
                  additionalProperties:
                    type: string
                  description: Extra labels to cronjob/job/pod.
                  type: object
                failedJobsHistoryLimit:
                  description: The number of failed finished jobs to retain. This is
                    a pointer to distinguish between explicit zero and not specified.
                    Defaults to 10.
                  format: int32
                  type: integer
                nodeAffinityStrategies:
                  description: NodeAffinityStrategy is nodeAffinity rules, it allows
                    you to constrain which nodes your pod is eligible to be scheduled
                    on, based on labels on the node.
                  items:
                    description: A node selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: The label key that the selector applies to.
                        type: string
                      operator:
                        description: Represents a key's relationship to a set of values.
                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and
                          Lt.
                        type: string
                      values:
                        description: An array of string values. If the operator is In
                          or NotIn, the values array must be non-empty. If the operator
                          is Exists or DoesNotExist, the values array must be empty.
                          If the operator is Gt or Lt, the values array must have a
                          single element, which will be interpreted as an integer. This
                          array is replaced during a strategic merge patch.
                        items:
                          type: string
                        type: array
                    required:
                      - key
                      - operator
                    type: object
                  type: array
                storageInterfaceType:
                  description: Specifies storage backend
                  type: string
                strategy:
                  description: Strategy to manage lifecycle of backup.
                  properties:
                    backupBinlog:
                      description: 是否备份binlog
                      type: boolean
                    backupSetExpireDuration:
                      default: 7d
                      description: 备份数据保留时长
                      type: string
                    binlogBackupSchedule:
                      default: '*/30 * * * *'
                      description: MySQL binlog的备份周期
                      type: string
                    binlogRetentionDays:
                      default: 7
                      description: MySQL binlog保留天数
                      type: integer
                    cleanBackupSchedule:
                      default: 0 */1 * * *
                      description: 清理备份的周期, crontab格式
                      type: string
                    fullBackupSchedule:
                      default: 0 0 * * 0
                      description: 全量备份的周期，crontab格式
                      type: string
                    fullBackupSetRetentionNumber:
                      default: 1
                      description: 全量备份的保留个数
                      type: integer
                    incrementalBackupSchedule:
                      default: 0 0 * * 1,2,3,4,5,6
                      description: 增量备份的周期，crontab格式
                      type: string
                    retentionPolicy:
                      description: 备份集保留策略
                      enum:
                        - FullBackupSetNumber
                        - ExpireDuration
                      type: string
                  required:
                    - backupBinlog
                    - fullBackupSchedule
                    - retentionPolicy
                  type: object
                successfulJobsHistoryLimit:
                  description: The number of successful finished jobs to retain. This
                    is a pointer to distinguish between explicit zero and not specified.
                    Defaults to 10.
                  format: int32
                  type: integer
                suspendCleanBackupCronJob:
                  description: This flag tells the controller to suspend subsequent
                    executions of clean backup job, it does not apply to already started
                    executions.
                  type: boolean
                suspendFullBackupCronJob:
                  description: This flag tells the controller to suspend subsequent
                    executions of full backup job, it does not apply to already started
                    executions.
                  type: boolean
                suspendIncrementalBackupCronJob:
                  description: This flag tells the controller to suspend subsequent
                    executions of incremental backup job, it does not apply to already
                    started executions.
                  type: boolean
              required:
                - backupQuotaSize
                - dbType
                - storageInterfaceType
                - strategy
              type: object
            status:
              description: BackupStatus defines the observed state of Backup
              properties:
                backupJobStatuses:
                  description: The latest available observations of current state of
                    backup jobs.
                  items:
                    properties:
                      backupSet:
                        properties:
                          backupId:
                            type: string
                          backupInstanceFingerprint:
                            type: string
                          backupMethod:
                            type: string
                          endTime:
                            format: date-time
                            type: string
                          expireDuration:
                            type: string
                          fullBackupSetId:
                            type: string
                          size:
                            format: int64
                            type: integer
                          startTime:
                            format: date-time
                            type: string
                        required:
                          - backupId
                          - backupInstanceFingerprint
                          - backupMethod
                          - expireDuration
                          - fullBackupSetId
                          - size
                        type: object
                      job:
                        description: 'ObjectReference contains enough information to
                        let you inspect or modify the referred object. --- New uses
                        of this type are discouraged because of difficulty describing
                        its usage when embedded in APIs.  1. Ignored fields.  It includes
                        many fields which are not generally honored.  For instance,
                        ResourceVersion and FieldPath are both very rarely valid in
                        actual usage.  2. Invalid usage help.  It is impossible to
                        add specific help for individual usage.  In most embedded
                        usages, there are particular     restrictions like, "must
                        refer only to types A and B" or "UID not honored" or "name
                        must be restricted".     Those cannot be well described when
                        embedded.  3. Inconsistent validation.  Because the usages
                        are different, the validation rules are different by usage,
                        which makes it hard for users to predict what will happen.  4.
                        The fields are both imprecise and overly precise.  Kind is
                        not a precise mapping to a URL. This can produce ambiguity     during
                        interpretation and require a REST mapping.  In most cases,
                        the dependency is on the group,resource tuple     and the
                        version of the actual struct is irrelevant.  5. We cannot
                        easily change it.  Because this type is embedded in many locations,
                        updates to this type     will affect numerous schemas.  Don''t
                        make new APIs embed an underspecified API type they do not
                        control. Instead of using this type, create a locally provided
                        and used type that is well-focused on your reference. For
                        example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                        .'
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      jobStatus:
                        type: string
                      jobType:
                        type: string
                      message:
                        type: string
                    required:
                      - backupSet
                      - job
                      - jobStatus
                      - jobType
                      - message
                    type: object
                  type: array
                backupLastScheduleTime:
                  description: Information when was the last time the backup job was
                    successfully scheduled.
                  format: date-time
                  type: string
                cleanJobStatuses:
                  description: The latest available observations of current state of
                    clean jobs.
                  items:
                    properties:
                      backupSets:
                        description: A set of backup set that has been cleaned by clean
                          job.
                        items:
                          properties:
                            backupId:
                              type: string
                            backupInstanceFingerprint:
                              type: string
                            backupMethod:
                              type: string
                            endTime:
                              format: date-time
                              type: string
                            expireDuration:
                              type: string
                            fullBackupSetId:
                              type: string
                            size:
                              format: int64
                              type: integer
                            startTime:
                              format: date-time
                              type: string
                          required:
                            - backupId
                            - backupInstanceFingerprint
                            - backupMethod
                            - expireDuration
                            - fullBackupSetId
                            - size
                          type: object
                        type: array
                      job:
                        description: 'ObjectReference contains enough information to
                        let you inspect or modify the referred object. --- New uses
                        of this type are discouraged because of difficulty describing
                        its usage when embedded in APIs.  1. Ignored fields.  It includes
                        many fields which are not generally honored.  For instance,
                        ResourceVersion and FieldPath are both very rarely valid in
                        actual usage.  2. Invalid usage help.  It is impossible to
                        add specific help for individual usage.  In most embedded
                        usages, there are particular     restrictions like, "must
                        refer only to types A and B" or "UID not honored" or "name
                        must be restricted".     Those cannot be well described when
                        embedded.  3. Inconsistent validation.  Because the usages
                        are different, the validation rules are different by usage,
                        which makes it hard for users to predict what will happen.  4.
                        The fields are both imprecise and overly precise.  Kind is
                        not a precise mapping to a URL. This can produce ambiguity     during
                        interpretation and require a REST mapping.  In most cases,
                        the dependency is on the group,resource tuple     and the
                        version of the actual struct is irrelevant.  5. We cannot
                        easily change it.  Because this type is embedded in many locations,
                        updates to this type     will affect numerous schemas.  Don''t
                        make new APIs embed an underspecified API type they do not
                        control. Instead of using this type, create a locally provided
                        and used type that is well-focused on your reference. For
                        example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                        .'
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      jobStatus:
                        type: string
                      message:
                        type: string
                    required:
                      - backupSets
                      - job
                      - jobStatus
                      - message
                    type: object
                  type: array
                conditions:
                  description: The latest available observations of an object's current
                    state.
                  items:
                    properties:
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of backup condition.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
