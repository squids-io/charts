# Default values for squids-hub.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: docker.io
  repository: squids
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: v1
  containerPort: 29527
  
service:
  type: ClusterIP
  port: 29527

mysql: 
  username: squids
  password: squids123456
  

secret: 
  ca: 
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZqVENDQTNXZ0F3SUJBZ0lKQU83emNVeEwxeEdZTUEwR0NTcUdTSWIzRFFFQkN3VUFNRjB4Q3pBSkJnTlYKQkFZVEFrTk9NUXN3Q1FZRFZRUUlEQUphU2pFTE1Ba0dBMVVFQnd3Q1NGb3hEekFOQmdOVkJBb01CbE54ZFdsawpjekVQTUEwR0ExVUVDd3dHVTNGMWFXUnpNUkl3RUFZRFZRUUREQWx6Y1hWcFpITXVhVzh3SGhjTk1qRXdNakF5Ck1USXpOek0wV2hjTk16RXdNVE14TVRJek56TTBXakJkTVFzd0NRWURWUVFHRXdKRFRqRUxNQWtHQTFVRUNBd0MKV2tveEN6QUpCZ05WQkFjTUFraGFNUTh3RFFZRFZRUUtEQVpUY1hWcFpITXhEekFOQmdOVkJBc01CbE54ZFdsawpjekVTTUJBR0ExVUVBd3dKYzNGMWFXUnpMbWx2TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDCkNnS0NBZ0VBeFRWb1pBc3JaeHoxdXUyUlY2L29CbDNQSk1LOHVTTXI2VFB6TmxLRGp0NGZSbU5KRjJ4Y3hPWEUKeHBvT3BmVVZacldIcFY2cFFmKzcwazIvbUVxQmJsQ3BwQWRTMmZiUWs5ZlZGYkxYZmtUeWZnVkcvNStiWmFUOAphRGlod0dlY2Y3ZWcxay9idWFrNmtxc2k2RGQ4VXNEUFZiamZVSjIvN0tzMmp5N0d6bW9ZZlFxSzA5R29OcWJsCldON0tWckwzckdFVEpqWDFSeVJhWnJuWEQ5OEZwTWs5bWhzTUxKSWFpNmlYeURqS0xoL1NpTUVVL3hVb2ZlUE8KbXRJRGhic1BDNEpReFhycE9NMEd3YTFqa1pMUVBvR2hRZWhpRFZkZjNLZ2xsZ0dlemw3OW90cmU3S0N1SElaSQo2clN0Q0hxMjBTeU56c1ZFbkZ2UG1WM3JraU1DbnowaGRXZ3lpb2lUZ2ZFSHpncjQ4L3Z0VjExZFZmaHhWamZkCnhxQnVnd2J0enBBd3g0SW5ZYWdWMk9WcWZBL09pbnYvRDBCQzIyTEMzc05kdVFYSnY3Vk1qZE1FemVHQjhFcHIKUDZkKys1S0hKSVY5RTlLYjZ6N0tCNFBxKzBUanAwZlp4YlpIOUVzTFc4VVp4MGhEODdBTGN2MXljU2xzUkVkSgphUHVkV0hxd2JUTzBWRDBjQW9YME1nRTkwdllaM3VXMGl3NjZObG4zdXNuZXU0RHpac3J1TER6dXBpVEhGeGdhCjAxM1QyWTdMN0lqU2xGV3lWdC9oK0U4aEc5MS9QdEtveUxRejh0L293VE1WWEhKYzVlb2ZyMmhFaEdDNWJZNlEKTmtmWE9nbnVZUlVPWVJhRTR1Z3JkOVQweWs0TkdhZldOOWVHV1QwZWIxOURZdFU0V09FQ0F3RUFBYU5RTUU0dwpIUVlEVlIwT0JCWUVGTGpJOUdDUGt0OFk1NHdjWThaOFAxK2hrSDNJTUI4R0ExVWRJd1FZTUJhQUZMakk5R0NQCmt0OFk1NHdjWThaOFAxK2hrSDNJTUF3R0ExVWRFd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnSUIKQUdRWXpuaVU1bU1aQ1l0Q2RDUW1ORGFEajVnZGVMbjRJek1BL2VEOENzTzExeFZLbnlhMUg2TEhpRXpXNGhrNApCOVdUdndiSXI4R3hnUElMbzJ5SUFjOHB0UGd4bC9mbFVEMGlzU2tMTjVlUWFuWGRYdGFCYmt0cmNUdFQyRS9ZCnRENjlBR3RIQkplbno2dmtOTXA4K2htRFI5LzFZZ05qMkt3VmhrMWJqa0NEV0UzcUdycG1mcEtDZzhuUWxPbUEKaXZrZEVpZFhhei9HZURWeC9iZUtYU3czaXk5SmZJNHhaNDJVdmw1OFRQWjV1eTBCcWd4RERqSjlPK1VkWEp5dgpaQlhVYnFhR3oyTE8vUUwvWnJtaU9rWlRydVY0ajJFUDNQYjBFWUdmM2JhTkF1QXRYOW1lUGo2ay83enArZnRECjVCb0xSRSt3M0V3d2dYeTR4eVhITmZ0c1pNQUh4cmxiYzUwd3NUbmJNYXJaS2RDQ3daemRLQUloM3BuOVo5OS8KTjR4dGhqOHBlbk9mVG8vZHpucWpHZXBpMTZLN1EyNFAzQm5qdGVTd1VISi85bE96VmxLKyt2ME9iZWlRRkhpKwpSQlBTZTluRndGbFBBcHV6eHJOekV3cnlITXFETUduczZkTW1aOVhsVlM3eGdNdWJmYVlsbTQ0OXNWTnZuUURIClkrUWV1RUtyQWtKNFhVeE41RG1BUU0yQVRsTjhXMnB4RlF3Rm1DcGFhaEJZUjdBTjg4dDZtdm1paDQ4ek50Mi8KanRKa0FpR3kvN015bVJSV1dnTWF4dFZsTURRUjJxNGpJZlBtT1E5MFltc3ZvY0lWemtVRjdSdFR0VnA2UFYvdQp6bnU0eHhvcXRMb1YrL3JLVy9SL3VqTkl2ako5M2RSd0NUVGFwTndPTFpsNwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls: 
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZ6ekNDQTdlZ0F3SUJBZ0lKQUtsbk1GREZPaGZYTUEwR0NTcUdTSWIzRFFFQkN3VUFNRjB4Q3pBSkJnTlYKQkFZVEFrTk9NUXN3Q1FZRFZRUUlEQUphU2pFTE1Ba0dBMVVFQnd3Q1NGb3hEekFOQmdOVkJBb01CbE54ZFdsawpjekVQTUEwR0ExVUVDd3dHVTNGMWFXUnpNUkl3RUFZRFZRUUREQWx6Y1hWcFpITXVhVzh3SGhjTk1qRXdNakF5Ck1USXpPVEUyV2hjTk16RXdNVE14TVRJek9URTJXakJkTVFzd0NRWURWUVFHRXdKRFRqRUxNQWtHQTFVRUNBd0MKV2tveEN6QUpCZ05WQkFjTUFraGFNUTh3RFFZRFZRUUtEQVpUY1hWcFpITXhEekFOQmdOVkJBc01CbE54ZFdsawpjekVTTUJBR0ExVUVBd3dKYzNGMWFXUnpMbWx2TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDCkNnS0NBZ0VBeXhPdnQ0QktXaExhRnJHalppNGhvZ0EybWNQZjJkSkJQeU94NWZoanlXVUI1UHBQT3VJZGVLSWIKRnRUSy93emh5MnJ3eUVRZkgwVGw2S2k5N2h0NklpWklHTzM4Q1gwUzFzeUtBdUJrSXVoa2hVK1dma3VUQXNUeApaMDdLeThteFFaZ3VqeVBVRDJ3YmhwVnFzeTU4aWdEMFJoSGlYTGhWdkR4T3Fhem43ZWZuSVM2eTRVUVBEeGJsCkhYZjBSendOY2gwMVdmY1ZCd2g5OXJHMUdMaHpmbEdHempreE85ZlBkWjdPUW1mZyt6bFNnM0tDOFQ3Y1hwb00KeUQ2SnhWeG10Z29WV1RpVlkyQWVmUzlWVUVFZE5oUDFuZk56RzI1RU52VXBwZUJuV2dCeGFsZ0h6NXdieWRmLwp5RER1TjBwUk5BYm5YK2V4TGI2a292NUh4MFhzWjl5aHJVby9jdnN3QzhUbTBqbCtmRTdpV293RUh2U3JUMHFlClpJZ2tWZkFGRUFXU3R0MksxbVlxL0JQdTZJMERNQ3dqdmdDTFVjanJGUklhV0MranhhU0t2VnRmZWhCdzVDUzQKdGZYMDM3cXBtWFB3Nm9zQzBycWcyVEpRZjVzb2dNQlBwQndBRHRieHNJT2J3OEh2VUlTRTc0eEtJdmU5ZGxFVgpSUWlsdU8vM25IOFdIYkM1QXpwQTFONWN1MnBvdHVERXBIaTF6VTI1RVFYUGJUa3FuQmJXZ1gxbEdlZlhRME80Cmw2QWhlTzAxUTQ0eXQvNjFjdzhrOXZzbHdiTEl0a1RhNm9sNDdlWnRoVHVNc3JoSDFISmM4N3ZPbDR0L1p4QlUKdHc3TkxOaUtqYlhxUEVIeHJKOEcyWVRzUFoyeXArN2thWENMTm9nZXBISlpEZkJETGRjQ0F3RUFBYU9Ca1RDQgpqakFmQmdOVkhTTUVHREFXZ0JTNHlQUmdqNUxmR09lTUhHUEdmRDlmb1pCOXlEQU1CZ05WSFJNQkFmOEVBakFBCk1Bc0dBMVVkRHdRRUF3SUU4REJRQmdOVkhSRUVTVEJIZ2o5emNYVnBaSE10YVc4dGEzVmlaWEp1WlhSbGN5MWsKWlhZdE1UWTVPVFEyTnpBMU15NTFjeTEzWlhOMExURXVaV3hpTG1GdFlYcHZibUYzY3k1amIyMkhCSDhBQUFFdwpEUVlKS29aSWh2Y05BUUVMQlFBRGdnSUJBSjJybzJpa2ZHQlRFbmdCNVQxWFlQRU9TWTR4ZEFidm52L3BVV253Ck1EdFFwNVF2d09Tdk1nWGV6RGo2ZkgzaXFTSE9UOXVWVmVlRXJBeHFBdWJBajBWblN1ZTNXVmYzV29kaSthWkIKellDSHJBSGlMc2s3WDJSV1loY2ZIRXU2bVV6QmpaTmoxT1RPWmtuNFo5dHQ4UjJDeWpFMFd3aGc5NUV3TmFaZwpucUtmNk03YmtuL2dmMWRHOFBBTHd6QlhQTXhzUDNQbVZ6MTJKMksyMkVQUlFTbkxYcHQzblczbmhCVWw1RDN3Ckd3dndrZUVmclpydksvK1BOS3drUkNocHEwTTVFRHY0ZS85Q0JXU0RxV2ZweTltODVlOVk3eHYxckRCbXZ5Z0YKdUx5Um42bjRyNXZpSUtvRXVpTFZGdlJJanI4aDZWT2pkWmxtbnRZVVFBcGE1TG5uK3E3akt0bWIrRTU1REtSNApoZkZMWDZGTWJsZjJQVm10RnZ1U2RYQTI3aHNsMlE2NFRyVHJXRVE1VzVkc3JzNlRNczVCMEtmZ3lCM0hUdW1xCi9WMGNIUWxwUW9yczVsTXFBWlprNTRkc0dLN1EzVGVSQnlxN1V5Z2w4anhTS3BKQUpoZjFGY3BKSEF1UUJLczEKQlo2bTF5MEc2RUR3d1VsWHIyQWlwUzFNVVZ5SitkOUdaNlJHYVh3aEV1c1poZ29BR2YyNWxkVWNGcFgwazZRcQovV1lMT3ZGRXRnaUk0RndUMHBXdmticWRRd1R4ODBiZ2pQMDYvVU95Tk9aZXIyQjdiYzhER2VXV2pwUGFhNUVlClZ4L0RDZy9RemE2UWpkN3ZRZWRZM3RkSkhReTBYL3ZFdUpjSFM4SElpUkQwdFd1S0FOVXdHdytvd09hd1ROSnIKTTFjMwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRZ0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1N3d2dna29BZ0VBQW9JQ0FRRExFNiszZ0VwYUV0b1cKc2FObUxpR2lBRGFadzkvWjBrRS9JN0hsK0dQSlpRSGsrazg2NGgxNG9oc1cxTXIvRE9ITGF2RElSQjhmUk9YbwpxTDN1RzNvaUprZ1k3ZndKZlJMV3pJb0M0R1FpNkdTRlQ1WitTNU1DeFBGblRzckx5YkZCbUM2UEk5UVBiQnVHCmxXcXpMbnlLQVBSR0VlSmN1Rlc4UEU2cHJPZnQ1K2NoTHJMaFJBOFBGdVVkZC9SSFBBMXlIVFZaOXhVSENIMzIKc2JVWXVITitVWWJPT1RFNzE4OTFuczVDWitEN09WS0Rjb0x4UHR4ZW1neklQb25GWEdhMkNoVlpPSlZqWUI1OQpMMVZRUVIwMkUvV2Q4M01iYmtRMjlTbWw0R2RhQUhGcVdBZlBuQnZKMS8vSU1PNDNTbEUwQnVkZjU3RXR2cVNpCi9rZkhSZXhuM0tHdFNqOXkrekFMeE9iU09YNThUdUphakFRZTlLdFBTcDVraUNSVjhBVVFCWksyM1lyV1ppcjgKRSs3b2pRTXdMQ08rQUl0UnlPc1ZFaHBZTDZQRnBJcTlXMTk2RUhEa0pMaTE5ZlRmdXFtWmMvRHFpd0xTdXFEWgpNbEIvbXlpQXdFK2tIQUFPMXZHd2c1dkR3ZTlRaElUdmpFb2k5NzEyVVJWRkNLVzQ3L2VjZnhZZHNMa0RPa0RVCjNseTdhbWkyNE1Ta2VMWE5UYmtSQmM5dE9TcWNGdGFCZldVWjU5ZERRN2lYb0NGNDdUVkRqakszL3JWekR5VDIKK3lYQnNzaTJSTnJxaVhqdDVtMkZPNHl5dUVmVWNsenp1ODZYaTM5bkVGUzNEczBzMklxTnRlbzhRZkdzbndiWgpoT3c5bmJLbjd1UnBjSXMyaUI2a2Nsa044RU10MXdJREFRQUJBb0lDQUQ1VVhZTng4ZUF4bHhTT0V6dmlmdG90ClBKVDNaTGFEYlJsSENHd3dUOWhaa3pwSGhaZnFIT2VRd2NYQkxFa2FHQmVLVERyN2haM2dWTHlUUmpCVjZLZWcKbmxKZ2dSSWNmSExITnJqcFRITFdaenZ2a0o1VTdkdFV2VTliQksyRnkwejV1NWlkZzVIME9ZS1dTN2lSVlJJNgpkcjhtOEJaTFVhMUR5VlVVeDk3aVpiTnVsT0xGTStZS3Zlbk1qb0pxc1NuTVF6ckl0b0NCSDhCZkRObDRpNkpDCnZhQ0FOMWRKeHRnd0ZOaVc3NXZNSFVKUkhGV1ZXS2dFbWxXL3RDT0tWOUFaeWpHblIxckgvck9ubW9UV1ozUFkKcm5ON2JHSUg5eEh6TDRSRkd4T3B2U1hKdlNRQW94clJuQ1ZDdDJycStYK0JldlNadFd6MzdhcEZaNXlISHFhNgpMK0dUSXFCWHlFbnFpdXZxSEtleStEN28vYmx5UHNuNHVQeXhDMkltamJvREcxYk94Y3B3Q1lXWWhtRXpBOTcwCmRteDYySlFtenJ6cTRLc3JCZm9jY1k0L1h1ZVd4dkgvS2JhL0Vya1NZSi9pU1NQQUFqZit5YitKZVpGS1QzYVAKeGtSb1RYWTRGeVpycFdQcHZMbFhWNWxOWVE0dUxmY204eDdXeXVmUmRBUnoxcHZ1UWlNTlBwVldZWjFwY0VIaApNb2pxNVFQVkRtVmk5UVh3amRJYzA2a1ZKT20wdXVDdFBhZEtCektUNkl3ejN6S1ZDNTcrUUJpd3loRU0xMWg5CnlBc1FJV1RtTnNlWVBzaStsVlZNazc1VjM3M0tPVElMNHRadGV1S0kyeVBCcU5EWlpvdERjOU5Ya1VVV09CREoKS1pjT0piS1Q2enBmcG5mbGNHWnBBb0lCQVFEcXdOL1VjQ1RhY3NMczlRMzZ2L0E3azV4OWU5eTZnbFZveEFDMgp2NGNObnBJRmROZU92b0FNTEFmWHliYmVFMEg0VGNqRlhNdmY2K2JicEFQbUFwQW4wZ04rQ2hFLzhuNWxXRlV3ClRjOURRTi9MSUtaOWVTK0V4Yzc3NDU5WFBxZzhiV3RKaDlNK2JncjhiaFNEK01BU2N1WHVPOGI2SjVhWDgvMlkKL2RHbzhWeGhBNkRBREJQNGRQNi9lRU1zRGR6VDhiZVkzRGVwWFN6Rzl6RWgyTGcwY3NVaWVDRXp1V2Y5b3pENApMOFN1VDVKL2lSRldibis0ck9mSG5UK3Z4dE9jRkM0OUlkaE42ajN1VlVYVjI4TlMyY1dqMmRFa2xzWW9VR3E4CngyNEhNaDFLdU1zYVJ0ZlB6cSsyRVlIeVFoNzBMR09qa2E2c1BrT1oydStXaFhpOUFvSUJBUURkZE9IVjY1QzgKSURiR0NqSStHY25FWUdWaTBGMEJPdUZHV0RiMzNiS2VjTkcwOWRqMzZ0UCtMMldoWEt4OS9TM3lad0daSktKbQpqRnpXQXN0cUlkWlN5bnZmaUk4ZERTNjZaMnJITDhMaDZUWStVTEVVNkNqYXlTZVNEcHlJNGh3SEpuazg4YVBZCnl1K013VldBN0c3RkF3ekdJTmdqUVVaRzV6OVh6eDZsczRwQXh3aWVZZzhMTSt2eWwwd0JKS0dtMmZMenpuTzUKWVhrWUNRNWVkMEtuR1NVZjlsMmxBS0Z0eVgzU3FYSTY5b3BnQ0d2L0R3cUhGWlI2WDdIcXF5eGZGTXFHU3RQNwpNMTZIR3lJOHFzSzlZQmZqNElTbjJwWmhWSS9yMWJiVUg4SkJObm14SCt3Y3dBTVRSMXhqOXIxRlhwMHRSTjAvCmZlVDZJYlBBZXh3akFvSUJBUURlZzRPbU1jWTg2WnFxVUgyM3VFZFZzVTBjQkZQczFhMXZhSm5rbnhhOGFobXUKNGxtUURESURWNWozaVZPMG5EeGp5QmNPUEM5alNJL0NrV3pBa0oxam9VVitLcnkvQ0hPV1RHd3pKUTNZaVoyWApSSk9MUzFzblZ2Z2krbGNHczNWMEVhTW9SMzZNSm5KelkwUSs4NEhiK3R6SFBCSVcrMzlhK1FMZ0NYYTUxRTNrCkJ6UlAxU0w0MXF6QmdKVHJKUmkwTE9JQ0duc0lKakZUUnV0alViRUl4ZURtRTBnbFp4Q1M4aVJ3bTVhcVF2SngKd05LV1FwYjl6YWJGSnVBL0ZROXZXaEdhRUlLZkYvRXIvOWY2Smh5Mlk0VmJFaE9Ud3ZhQkwvaDhoK3hiRmIxKwpIanNsNVJDYkFTYThSVXdPL1cycHRJbWRlWEZBQXFUQktTMEFWL05oQW9JQkFHNFJVdEdkQkZITWZRelBNb3VWCkM2aHo5TkE1R1pDcjhCMmphS2FuWk1qRThDWE43Mm5CS0Y1MHRrR09LeGx2aGErdUxLZ3VBaDJQOC9CV2NUMnQKMWJWT2VHVHduWmpsM1d5K1M5NzJTUms1YlVGcG42bnhmYVRJUjhlYlJZZnZRZGozOFZndURhNkpwcWhCeXpxSgp5TUJZdExlZ3lXdzBYRGFQWnZkQXRVM01QNUhVbXQ4Rmc4Nmduc3Z6RU02Y28wK25rYzVGdFZUVk1uZVV3TFNJCjkvTFBWNWxjUE16dTFFMFowVlNyN1YrSys5bWhOZlFPU01BOUpJL3lFaDY5dHc4RzZXWDN1UVpvVUxvNzdUZFQKOC9obDAxbnFWR1NOQ3lNVEFYbEl2bGNOOWVHdHJxd3ZYbzRualIrKzN4ZThJZlJoZ3lObHo4Vm4wQy9XSWw0dgpraHNDZ2dFQVUxeFdkT1NvdFpIKzArTHQ0bVJ0dDZIWThlR0hnVStWQlcrMFplUXNYMVpiK1Z2dTRjRjU3WW0zCnkxbXFYTERjdTNWMEpDYnBVd1BXY2xhcDQraklyQmRqOWcwNjlNZG5hYUN5L0t1R3V2YkNFUjYzY2FDbHQ5dHcKR2k3SG11TTRYc0VuUzZYV2JvT0hSRVlDRVdrdTdCcUdLTlkvalpmUFdTU1FER1czNGsrOFN6UVBNSnRhRy9saAo3K2FnUk04M21MMnhFUjM4d3FoMnpKL0RQYXFva0JCUGhBUXF6azZuN0tKOVdjc3VmN2x1K1dzeW5OZVhFTlVvClRxcE1rdTEvbWpRUlc2RUJvQlArSHpFSjM0Rml3aVF1ay9rQVgvZm9wT3BOZUYzWHl2azByZUVBb0tqeVE4eHMKRUZFdHdzZzloTWZKVG00bG5SeUF2cWpXSnNtTllnPT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo=
    
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
